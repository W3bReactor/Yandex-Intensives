(self.webpackChunkunit_demo_cra = self.webpackChunkunit_demo_cra || []).push([[779], { 273: (n, t, r) => { function e(n) { return n.charAt(0) === '/'; } function i(n, t) { for (let r = t, e = r + 1, i = n.length; e < i; r += 1, e += 1)n[r] = n[e]; n.pop(); }r.d(t, { Z: () => u }); const u = function (n, t) { void 0 === t && (t = ''); let r; const u = n && n.split('/') || []; let o = t && t.split('/') || []; const f = n && e(n); const s = t && e(t); const a = f || s; if (n && e(n) ? o = u : u.length && (o.pop(), o = o.concat(u)), !o.length) return '/'; if (o.length) { const c = o[o.length - 1]; r = c === '.' || c === '..' || c === ''; } else r = !1; for (var h = 0, l = o.length; l >= 0; l--) { const p = o[l]; p === '.' ? i(o, l) : p === '..' ? (i(o, l), h++) : h && (i(o, l), h--); } if (!a) for (;h--; h)o.unshift('..'); !a || o[0] === '' || o[0] && e(o[0]) || o.unshift(''); let v = o.join('/'); return r && v.substr(-1) !== '/' && (v += '/'), v; }; } }]);
