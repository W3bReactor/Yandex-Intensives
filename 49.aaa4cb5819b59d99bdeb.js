(self.webpackChunkunit_demo_cra = self.webpackChunkunit_demo_cra || []).push([[49], {
  49: (t, e, n) => { n.d(e, { S: () => f }); const r = n(161); const i = n.n(r); const o = n(294); const c = n(704); const a = n(895); const u = n(721).Z; const s = n(893); const d = function (t) { const e = t.index; const n = (0, c.I0)(); const r = (0, c.v9)(((t) => t.items[e])); const i = (0, c.v9)(((t) => t.done[e])); const d = (0, o.useCallback)((() => n((0, a.j0)(e, !i))), [e, i, n]); return (0, s.jsx)('div', { 'data-testid': u(), className: 'EPk3EXERT5xyM_B8zf0P', children: (0, s.jsxs)('div', { 'data-testid': 'list-item', className: i ? 'done' : '', children: [(0, s.jsx)('input', { type: 'checkbox', checked: i, onChange: d }), r] }) }); }; const l = function () { const t = (0, c.I0)(); const e = (0, c.v9)(((t) => t.items)); const n = (0, c.v9)(((t) => t.text)); const r = (0, o.useCallback)(((e) => { const n = e.target; t((0, a.Hd)(n.value)); }), [t]); const u = (0, o.useCallback)((() => { t((0, a.jX)(n)); }), [t, n]); return (0, s.jsxs)('div', { children: [(0, s.jsxs)('div', { children: [(0, s.jsx)('input', { 'data-testid': 'input-add', value: n, onChange: r }), (0, s.jsx)('button', { 'data-testid': 'button-add', onClick: u, children: 'Добавить' })] }), (0, s.jsx)('div', { 'data-testid': 'list', className: 'list', children: i()(e, ((t, e) => (0, s.jsx)(d, { index: e }, e))) })] }); }; var f = function () { return (0, s.jsxs)(s.Fragment, { children: [(0, s.jsx)('h1', { 'data-testid': 'page-title', children: 'Home' }), (0, s.jsx)('p', { children: 'This is the list.' }), (0, s.jsx)(l, {})] }); }; },
  895: (t, e, n) => {
    n.d(e, {
      Hd: () => l, N2: () => b, j0: () => f, jX: () => d,
    }); const r = n(890); function i(t) { return (function (t) { if (Array.isArray(t)) return o(t); }(t)) || (function (t) { if (typeof Symbol !== 'undefined' && t[Symbol.iterator] != null || t['@@iterator'] != null) return Array.from(t); }(t)) || (function (t, e) { if (t) { if (typeof t === 'string') return o(t, e); let n = Object.prototype.toString.call(t).slice(8, -1); return n === 'Object' && t.constructor && (n = t.constructor.name), n === 'Map' || n === 'Set' ? Array.from(t) : n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? o(t, e) : void 0; } }(t)) || (function () { throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'); }()); } function o(t, e) { (e == null || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r; } function c(t, e) { const n = Object.keys(t); if (Object.getOwnPropertySymbols) { let r = Object.getOwnPropertySymbols(t); e && (r = r.filter(((e) => Object.getOwnPropertyDescriptor(t, e).enumerable))), n.push.apply(n, r); } return n; } function a(t) { for (let e = 1; e < arguments.length; e++) { var n = arguments[e] != null ? arguments[e] : {}; e % 2 ? c(Object(n), !0).forEach(((e) => { u(t, e, n[e]); })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : c(Object(n)).forEach(((e) => { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)); })); } return t; } function u(t, e, n) {
      return e in t ? Object.defineProperty(t, e, {
        value: n, enumerable: !0, configurable: !0, writable: !0,
      }) : t[e] = n, t;
    } const s = { items: ['Позавтракать', 'Сходить в магазин', 'Покормить кота'], done: {}, text: '' }; var d = function (t) { return { type: 'ADD_ITEM', text: t }; }; var l = function (t) { return { type: 'SET_TEXT', text: t }; }; var f = function (t, e) { return { type: 'SET_DONE', index: t, done: e }; }; const p = function () { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s; const e = arguments.length > 1 ? arguments[1] : void 0; switch (e.type) { case 'ADD_ITEM': return a(a({}, t), {}, { text: '', items: [].concat(i(t.items), [e.text]) }); case 'SET_TEXT': return a(a({}, t), {}, { text: e.text }); case 'SET_DONE': return a(a({}, t), {}, { done: a(a({}, t.done), {}, u({}, e.index, e.done)) }); default: return t; } }; function b() { return (0, r.MT)(p); }
  },
}]);
